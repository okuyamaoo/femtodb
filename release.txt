[Version-0.0.3] - 変更履歴

1.既存テーブルにインデックスのカラムを追加するAPIを追加
[テーブルへインデックスを追加]
　メソッド：PUT
　URL    :/femtodb/table
　パラメータ
　------------
　[必須パラメータ]
　   パラメータ1.説明：テーブル名を指定
　     Key名="table"
　     Value=テーブル名
　   パラメータ1.例) table=table1
　------------
　   パラメータ2.説明：検索用インデックスを作成するカラム名とインデックスのタイプ(完全一致用Indexの"equal"とテキスト検索用の"text")を指定。複数指定する場合はカンマ区切りで指定。
　   パラメータ2.Key名="indexcolumns"
　   パラメータ2.Value=カラム名:インデックスタイプ
　   パラメータ2.例) indexcolumns=userid:equal,address:text
　------------
　
　[返却値]：実行結果/JSON形式


2.Where条件にin句を追加


3.Where条件にnotin句を追加

4.Where条件のtextを複数ワードのor検索に対応
  Where条件のtext指定に対して複数キーワードでのor検索機能を追加
  検索後を"|"で区切って列挙することでキーワード中の何れかにマッチするデータを結果として返す
  例) where=schoolname text 高校|中学校
    上記指定にて学校名に高校もしくは中学校を含むデータが取得される。
	textインデックスが設定されているカラムの場合はインデックスが利用される。

5.Commit処理を2段階で実行出来る機能を追加
  FemtoDBのコミット処理は大きく2段階の処理が存在する
   ・1段階目でインデックスなどを整備
   ・2段階目でトランザクション番号をコミットし全トランザクションから参照可能なデータとする
  1段階目の処理に関しては更新量などに応じて時間がかかるが2段階目の処理は非常に高速であり、
  更新データ量に影響を受けない。
  本機能はこの2段階の処理をユーザ指定にて実行出来る機能である。
  利用用途としては複数のFemtoDBへのデータ反映等を想定しており、今後のFemtoDB自体が利用する機能である。

6.FemtoLoderのTSV内に含まれる文字列により取り込みエラーとなる不具合に対応
  これによりダブルコーテーションは登録不可となりました。事前にエンコードをお願いします。

-------------------------------------------------------------------------------------------------
[Version-0.0.2] - 変更履歴

1.データ登録時に事前にテーブル定義が存在しない場合に自動的にテーブルを作成する起動オプションを追加
  起動引数にテーブル自動作成モードを追加

  -table_create true/false
  	trueにすることで自動的にテーブルが作成されます
   デフォルト:false
  設定例) -table_create true


2.内部のテーブル総検処理を高速化
  内部ストレージ部分のデータ検証処理を高速化

3.テキスト検索インデックス(kuromoji用)にユーザ辞書が利用出来る機能を追加
  -dictionary ファイルパス
  	ファイルパスを指定することで辞書ファイルが読み込まれる
   デフォルト:指定なし
  設定例) -dictionary ./user_dictionary.txt
  femtodbはテキスト検索インデックス作成にkuromojiを利用しているため、
  詳しくは以下の本家URLの辞書ファイルの作成方法を参照してください。
   公式ページ:http://www.atilika.org/

4.操作記録ログが破損した際に該当行を明示しエラーとして終了するように変更

[バグ修正]
1.データローダーでのデータロード時に定義したカラム数に満たないデータ行が存在した際にエラーとなる問題に対応
