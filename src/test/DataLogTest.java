package test;import java.util.*;import femtodb.core.*;import femtodb.core.table.*;import femtodb.core.table.transaction.*;import femtodb.core.table.data.*;import femtodb.core.table.type.*;import femtodb.core.accessor.*;import femtodb.core.accessor.parameter.*;public class DataLogTest {    DataAccessor ac = null;    public static void main(String[] args) {        try {            DataLogTest test = new DataLogTest();            test.ac = new DataAccessor(args);            System.out.println("Simple test start");            System.out.println(" testCreateTable - start");            test.testCreateTable();            System.out.println(" testCreateTable - end");            System.out.println(" insert - start");            test.testInsert();            System.out.println(" insert - end");            System.out.println(" update - start");            test.testUpdate();            System.out.println(" update - end");            System.out.println(" delete - start");            test.testDelete();            System.out.println(" delete - end");            System.out.println("Simple test finish");            System.exit(0);        } catch(Exception e) {            e.printStackTrace();        }    }    public void testCreateTable() throws Exception {                List<TableInfo> tableList = ac.getTableList();        if (tableList == null || tableList.size() != 7)  System.out.println(" testCreateTable - error - 1");        for (TableInfo info : tableList) {            if (info.tableName.equals("table1")) {                Iterator ite = info.infomationMap.entrySet().iterator();                int cnt = 0;                while(ite.hasNext()) {                    cnt++;                    Map.Entry<String, IColumnType> targetEntry = (Map.Entry)ite.next();                    String key = targetEntry.getKey();                    IColumnType value = targetEntry.getValue();                    if (key.equals("table1-column1")) {                        if (value.getType() != 1) {                            System.out.println(" testCreateTable - error - 3");                        }                    } else if (key.equals("table1-column2")) {                        if (value.getType() != 3) {                            System.out.println(" testCreateTable - error - 4");                        }                    } else {                        System.out.println(" testCreateTable - error - 5");                    }                 }                if (cnt != 2) System.out.println(" testCreateTable - error - 6");            } else if (info.tableName.equals("table2")) {                Iterator ite = info.infomationMap.entrySet().iterator();                int cnt = 0;                while(ite.hasNext()) {                    cnt++;                    Map.Entry<String, IColumnType> targetEntry = (Map.Entry)ite.next();                    String key = targetEntry.getKey();                    IColumnType value = targetEntry.getValue();                    if (key.equals("table2-column1")) {                        if (value.getType() != 3) {                            System.out.println(" testCreateTable - error - 7");                        }                    } else if (key.equals("table2-column2")) {                        if (value.getType() != 1) {                            System.out.println(" testCreateTable - error - 8");                        }                    } else {                        System.out.println(" testCreateTable - error - 9");                    }                 }                if (cnt != 2) System.out.println(" testCreateTable - error - 10");            }        }    }    public void testInsert() throws Exception {        String tableName = "inserttable";        TransactionNo tn3 = ac.createTransaction();        SelectParameter sp2 = null;        sp2 = new SelectParameter();        sp2.setTableName(tableName);        List<TableDataTransfer> ret1 = ac.selectTableDataList(sp2, tn3);        if (ret1.size() == 4) {            for (TableDataTransfer tableDataTransfer : ret1) {                if (tableDataTransfer.getColumnData("col1") != null &&                         (tableDataTransfer.getColumnData("col1").equals("col1-1data") || tableDataTransfer.getColumnData("col1").equals("col1-2data") ||                         tableDataTransfer.getColumnData("col1").equals("col1-3data") || tableDataTransfer.getColumnData("col1").equals("col1-4data"))) {                    if (tableDataTransfer.getColumnData("col1").equals("col1-1data")) {                        if (!tableDataTransfer.getColumnData("col4").equals("15")) {                            System.out.println(" testInsert - error - 54");                        }                        if (!tableDataTransfer.getColumnData("col1").equals("col1-1data")) {                            System.out.println(" testInsert - error - 55");                        }                        if (!tableDataTransfer.getColumnData("col2").equals("col2-1data")) {                            System.out.println(" testInsert - error - 56");                        }                        if (!tableDataTransfer.getColumnData("col3").equals("col3-1data")) {                            System.out.println(" testInsert - error - 57");                        }                    } else if (tableDataTransfer.getColumnData("col1").equals("col1-2data")) {                        if (!tableDataTransfer.getColumnData("col4").equals("40")) {                            System.out.println(" testInsert - error - 58");                        }                        if (!tableDataTransfer.getColumnData("col1").equals("col1-2data")) {                            System.out.println(" testInsert - error - 59");                        }                        if (!tableDataTransfer.getColumnData("col2").equals("col2-2data")) {                            System.out.println(" testInsert - error - 60");                        }                        if (!tableDataTransfer.getColumnData("col3").equals("col3-2data")) {                            System.out.println(" testInsert - error - 61");                        }                     } else if (tableDataTransfer.getColumnData("col1").equals("col1-3data")) {                        if (!tableDataTransfer.getColumnData("col4").equals("60")) {                            System.out.println(" testInsert - error - 62");                        }                        if (!tableDataTransfer.getColumnData("col1").equals("col1-3data")) {                            System.out.println(" testInsert - error - 63");                        }                        if (!tableDataTransfer.getColumnData("col2").equals("col2-3data")) {                            System.out.println(" testInsert - error - 64");                        }                        if (!tableDataTransfer.getColumnData("col3").equals("col3-3data")) {                            System.out.println(" testInsert - error - 65");                        }                    } else if (tableDataTransfer.getColumnData("col1").equals("col1-4data")) {                        if (!tableDataTransfer.getColumnData("col4").equals("70")) {                            System.out.println(" testInsert - error - 66");                        }                        if (!tableDataTransfer.getColumnData("col1").equals("col1-4data")) {                            System.out.println(" testInsert - error - 67");                        }                        if (!tableDataTransfer.getColumnData("col2").equals("col2-4data")) {                            System.out.println(" testInsert - error - 68");                        }                        if (!tableDataTransfer.getColumnData("col3").equals("col3-4data")) {                            System.out.println(" testInsert - error - 69");                        }                    } else {                        System.out.println(" testInsert - error - 70");                    }                } else {                    System.out.println(" testInsert - error - 71");                }            }        } else {            System.out.println(" testInsert - error - 72");        }    }    public void testUpdate() throws Exception {        String tableName = "updatetable";        String tableName2 = "updatetable2";        TransactionNo tnX5 = ac.createTransaction();        SelectParameter sp = new SelectParameter();        sp.setTableName(tableName2);        ResultStruct result = ac.selectTableData(sp, tnX5);        if (result.getBaseResultCount() != 100) {            System.out.println(" testUpdate - error - 18");        }        sp = new SelectParameter();        sp.setTableName(tableName2);        sp.setIndexWhereParameter("col1", IWhereType.WHERE_TYPE_EQUAL, new EqualWhereParameter("col1-1data15"));        result = ac.selectTableData(sp, tnX5);                List<TableDataTransfer> list = result.getResultList();        if (list.size() != 1) {            System.out.println(" testUpdate - error - 19");        }        for (TableDataTransfer tableDataTransfer : list) {            String col4Data = tableDataTransfer.getColumnData("col4");            String colxData = tableDataTransfer.getColumnData("colx");            if (!col4Data.equals("YYY") || !colxData.equals("YYY")) {                System.out.println(" testUpdate - error - 20");            }        }        sp = new SelectParameter();        sp.setTableName(tableName2);        sp.setIndexWhereParameter("col4", IWhereType.WHERE_TYPE_EQUAL, new EqualWhereParameter("YYY"));        result = ac.selectTableData(sp, tnX5);                list = result.getResultList();        if (list.size() != 1) {            System.out.println(" testUpdate - error - 21");        }        for (TableDataTransfer tableDataTransfer : list) {            String col1Data = tableDataTransfer.getColumnData("col1");            if (!col1Data.equals("col1-1data15")) {                System.out.println(" testUpdate - error - 22");            }        }        sp = new SelectParameter();        sp.setTableName(tableName2);        sp.setIndexWhereParameter("col1", IWhereType.WHERE_TYPE_EQUAL, new EqualWhereParameter("col1-1data16"));        result = ac.selectTableData(sp, tnX5);                list = result.getResultList();        if (list.size() != 1) {            System.out.println(" testUpdate - error - 23");        }        for (TableDataTransfer tableDataTransfer : list) {            String col4Data = tableDataTransfer.getColumnData("col4");            String colxData = tableDataTransfer.getColumnData("colx");            if (!col4Data.equals("CCCC") || !colxData.equals("CCCC")) {                System.out.println(" testUpdate - error - 24");            }        }        sp = new SelectParameter();        sp.setTableName(tableName2);        sp.addNormalWhereParameter("colx", IWhereType.WHERE_TYPE_EQUAL, new EqualWhereParameter("CCCC"));        result = ac.selectTableData(sp, tnX5);                list = result.getResultList();        if (list.size() != 1) {            System.out.println(" testUpdate - error - 25");        }        for (TableDataTransfer tableDataTransfer : list) {            String col1Data = tableDataTransfer.getColumnData("col1");            if (!col1Data.equals("col1-1data16")) {                System.out.println(" testUpdate - error - 26");            }        }        sp = new SelectParameter();        sp.setTableName(tableName2);        sp.setIndexWhereParameter("col4", IWhereType.WHERE_TYPE_EQUAL, new EqualWhereParameter("PPPP"));        sp.addNormalWhereParameter("colx", IWhereType.WHERE_TYPE_EQUAL, new EqualWhereParameter("PPPP"));        result = ac.selectTableData(sp, tnX5);                list = result.getResultList();        if (list.size() != 9) {            System.out.println(" testUpdate - error - 27");        }        for (TableDataTransfer tableDataTransfer : list) {            String col5Data = tableDataTransfer.getColumnData("col5");            if (new Integer(col5Data).intValue() < 91) {                System.out.println(" testUpdate - error - 28");            }        }    }    public void testDelete() throws Exception {        String tableName1 = "deletetable1";        String tableName2 = "deletetable2";        TransactionNo tnXX = ac.createTransaction();        SelectParameter sp = new SelectParameter();        sp = new SelectParameter();        sp.setTableName(tableName1);        ResultStruct result = ac.selectTableData(sp, tnXX);                if (result.getBaseResultCount() != 88) {            System.out.println(" testDelete - error - 17");        }        sp = new SelectParameter();        sp.setTableName(tableName2);        result = ac.selectTableData(sp, tnXX);                if (result.getBaseResultCount() != 89) {            System.out.println(" testDelete - error - 18");        }    }}