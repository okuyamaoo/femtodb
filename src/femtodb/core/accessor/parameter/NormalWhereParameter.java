package femtodb.core.accessor.parameter;/**  * NormalWhereParameterクラス<br> * * @author Takahiro Iwase * @license Apache License 2.0  */public class NormalWhereParameter {    private String columnName = null;    private int whereType = -1;    private IWhereParameter parameter = null;    /**     * where句のパラメータクラスのコンストラクタ     *     * @param columnName 対象カラム名     * @param whereType whereの条件指定     * @param parameter 条件側のパラメータ     */    public NormalWhereParameter(String columnName, int whereType, IWhereParameter parameter) {        this.columnName = columnName;        this.whereType = whereType;        this.parameter = parameter;    }    public NormalWhereParameter(String storeString) {        String[] storeStringList = storeString.split("\t");                this.columnName = storeStringList[0];        this.whereType = Integer.parseInt(storeStringList[1]);        if (storeStringList[2].indexOf("EqualWhereParameter") == 0) {            String[] parameterSplit = storeStringList[2].split("=");            this.parameter = new EqualWhereParameter(parameterSplit[1]);        } else if (storeStringList[2].indexOf("LikeWhereParameter") == 0) {            String[] parameterSplit = storeStringList[2].split("=");            this.parameter = new LikeWhereParameter(parameterSplit[1]);        } else if (storeStringList[2].indexOf("LargeWhereParameter") == 0) {            String[] parameterSplit = storeStringList[2].split("=");            this.parameter = new LargeWhereParameter(parameterSplit[1]);        } else if (storeStringList[2].indexOf("SmallWhereParameter") == 0) {            String[] parameterSplit = storeStringList[2].split("=");            this.parameter = new SmallWhereParameter(parameterSplit[1]);        } else if (storeStringList[2].indexOf("InWhereParameter") == 0) {            String[] parameterSplit = storeStringList[2].split("=");            this.parameter = new InWhereParameter(parameterSplit[1]);        } else if (storeStringList[2].indexOf("NotInWhereParameter") == 0) {            String[] parameterSplit = storeStringList[2].split("=");            this.parameter = new NotInWhereParameter(parameterSplit[1]);        }    }    public String getColumnName() {        return this.columnName;    }    public int getWhereType() {        return this.whereType;    }    public IWhereParameter getParameter() {        return this.parameter;    }    public String toString(){        return columnName + "\t" + whereType + "\t" + parameter.toStoreString();    }}